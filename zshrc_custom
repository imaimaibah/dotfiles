alias vi=nvim
alias lg=lazygit
alias gf="git flow"
alias cat="bat"
alias tcap='tmux capture-pane -p -S - -E -'
bindkey "^R" history-incremental-search-backward
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$HOME/.local/bin:$PATH"
export EDITOR=nvim
export XDG_CONFIG_HOME="$HOME/.config"
#export KIND_EXPERIMENTAL_PROVIDER=podman

# ---- FZF -----

# Set up fzf key bindings and fuzzy completion
eval "$(fzf --zsh)"

# --- setup fzf theme ---
fg="#CBE0F0"
bg="#011628"
bg_highlight="#143652"
purple="#B388FF"
blue="#06BCE4"
cyan="#2CF9ED"

export FZF_DEFAULT_OPTS="--prompt 'üîç ' --layout=reverse --tmux center,80%,60% --color=fg:${fg},bg:${bg},hl:${purple},fg+:${fg},bg+:${bg_highlight},hl+:${purple},info:${blue},prompt:${cyan},pointer:${cyan},marker:${cyan},spinner:${cyan},header:${cyan}"

# -- Use fd instead of fzf --

export FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --exclude .git . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type=d --hidden --exclude .git . "$1"
}

show_file_or_dir_preview="if [ -d {} ]; then eza --tree --color=always {} | head -200; else bat -n --color=always --line-range :500 {}; fi"

export FZF_CTRL_T_OPTS="--preview '$show_file_or_dir_preview'"
export FZF_CTRL_R_OPTS=""
export FZF_ALT_C_OPTS="--preview 'eza --tree --color=always {} | head -200'"

# Use ~~ as the trigger sequence instead of the default **
# export FZF_COMPLETION_TRIGGER='~~'

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments to fzf.
# e.g.
# vi **<tab>
# cd **<tab>
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    kubectl)      kubectl get po --no-headers |awk '{print $1}'| fzf --preview "kubectl describe po {1}" "$@" ;;
    vi)           fzf --preview "$show_file_or_dir_preview" "$@" ;;
    cd)           fzf --preview 'eza --tree --color=always {} | head -200' "$@" ;;
    export|unset) fzf --preview "eval 'echo \${}'"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    git)          (git branch 2>/dev/null || return 1) | sed 's/[\* ]*//g' | fzf --preview 'git show {}' ;;
    *)            fzf --preview "$show_file_or_dir_preview" "$@" ;;
  esac
}

# ----- Bat (better cat) -----
export BAT_THEME=tokyonight_night

# ---- Eza (better ls) -----
alias ls="eza -l --git"
export EZA_ICONS_AUTO=always

# ---- vim switch ----
sv(){
  vim=$1
  case $vim in
    lazy*)
      echo "Switch to LazyVim"
      mkdir -p ~/.local/{share,state}/nvim.{astronvim,lazyvim} ~/.cache/nvim.{astronvim,lazyvim}
      rm -rf ~/.config/nvim ~/.local/state/nvim ~/.local/share/nvim ~/.cache/nvim
      ln -sf ~/.config/dotfiles/nvim.lazyvim ~/.config/nvim
      ln -sf ~/.local/share/nvim.lazyvim ~/.local/share/nvim
      ln -sf ~/.local/state/nvim.lazyvim ~/.local/state/nvim
      ln -sf ~/.cache/nvim.lazyvim ~/.cache/nvim
      ;;
    astro*)
      echo "Switch to AstroNvim"
      mkdir -p ~/.local/{share,state}/nvim.{astronvim,lazyvim} ~/.cache/nvim.{astronvim,lazyvim}
      rm -rf ~/.config/nvim ~/.local/state/nvim ~/.local/share/nvim ~/.cache/nvim
      ln -sf ~/.config/dotfiles/nvim.astronvim ~/.config/nvim
      ln -sf ~/.local/share/nvim.astronvim ~/.local/share/nvim
      ln -sf ~/.local/state/nvim.astronvim ~/.local/state/nvim
      ln -sf ~/.cache/nvim.astronvim ~/.cache/nvim
      ;;
    nvchad)
      echo "Switch to NvChad"
      mkdir -p ~/.local/{share,state}/nvim.{astronvim,lazyvim,nvchad} ~/.cache/nvim.{astronvim,lazyvim,nvchad}
      rm -f ~/.config/nvim ~/.local/state/nvim ~/.local/share/nvim ~/.cache/nvim
      ln -sf ~/.config/dotfiles/nvim.nvchad ~/.config/nvim
      ln -sf ~/.local/share/nvim.nvchad ~/.local/share/nvim
      ln -sf ~/.local/state/nvim.nvchad ~/.local/state/nvim
      ln -sf ~/.cache/nvim.nvchad ~/.cache/nvim
      ;;
    *) 
      echo "Current nvim: $(ls -ld ~/.config/nvim|awk -F. '{print $NF}')"
      ;;
  esac
}

# ---- fzf-git ----
if [ -f ~/.local/bin/fzf-git.sh ];then
  source ~/.local/bin/fzf-git.sh
fi

# ---- fzf-tab ----
if [ -f ~/.local/bin/fzf-zsh-completion.sh ];then
  source ~/.local/bin/fzf-zsh-completion.sh
fi

# ---- ripgrep fzf view ----
rfv(){
  rg --color=always --line-number --no-heading --smart-case "${*:-}" 2>/dev/null|
    fzf --ansi \
    --delimiter : \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --bind 'enter:become(nvim {1} +{2})'
}
zle -N rfv
bindkey -M vicmd '^F^G' rfv
bindkey -M viins '^F^G' rfv

# ---- fd fzf view ----
ffv(){
  fd --hidden --strip-cwd-prefix --exclude .git 2>/dev/null|
    fzf --ansi \
    --preview "$show_file_or_dir_preview" \
    --bind 'enter:become(nvim {-1})'
}
zle -N ffv
bindkey -M vicmd '^F^F' ffv
bindkey -M viins '^F^F' ffv

zstyle ':completion:*' fzf-search-display true
zstyle ':completion:*' fzf-completion-secondary-color red
zstyle ':completion::*:(cd|eza)::*' fzf-completion-opts --preview='eval eza -l -L1 --git --tree --color=always {1}|head -200'
zstyle ':completion::*:*::*' fzf-completion-opts --preview='
  eval set -- {+1}
  if [ -d "$1" ]; then eza -L1 --tree -l --git --color=always $@| head -200; else bash -c "bat -n --color=always --line-range :500 $@"; fi
'
